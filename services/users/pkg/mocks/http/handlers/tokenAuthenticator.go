// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	clubrizer "github.com/clubrizer/services/users/internal/authenticator/clubrizer"

	mock "github.com/stretchr/testify/mock"
)

// TokenAuthenticator is an autogenerated mock type for the tokenAuthenticator type
type TokenAuthenticator struct {
	mock.Mock
}

type TokenAuthenticator_Expecter struct {
	mock *mock.Mock
}

func (_m *TokenAuthenticator) EXPECT() *TokenAuthenticator_Expecter {
	return &TokenAuthenticator_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: userID
func (_m *TokenAuthenticator) Get(userID int64) (*clubrizer.User, error) {
	ret := _m.Called(userID)

	var r0 *clubrizer.User
	if rf, ok := ret.Get(0).(func(int64) *clubrizer.User); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*clubrizer.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TokenAuthenticator_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type TokenAuthenticator_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - userID int64
func (_e *TokenAuthenticator_Expecter) Get(userID interface{}) *TokenAuthenticator_Get_Call {
	return &TokenAuthenticator_Get_Call{Call: _e.mock.On("Get", userID)}
}

func (_c *TokenAuthenticator_Get_Call) Run(run func(userID int64)) *TokenAuthenticator_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int64))
	})
	return _c
}

func (_c *TokenAuthenticator_Get_Call) Return(_a0 *clubrizer.User, _a1 error) *TokenAuthenticator_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewTokenAuthenticator interface {
	mock.TestingT
	Cleanup(func())
}

// NewTokenAuthenticator creates a new instance of TokenAuthenticator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTokenAuthenticator(t mockConstructorTestingTNewTokenAuthenticator) *TokenAuthenticator {
	mock := &TokenAuthenticator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
